name: Run Python Tests

on:
  push: # Runs on pushes to any branch
    branches-ignore: # Optional: ignore pushes to specific branches if needed, like gh-pages
      - 'gh-pages'
  pull_request: # Runs on pull requests targeting main
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11'] # Test against multiple Python versions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root

      - name: Run tests with unittest
        run: |
          poetry run python -m unittest discover -s tests -p "test_*.py"
        # If using pytest, the command would be:
        # pytest tests/

      # Optional: Add a step for coverage reporting if you set it up
      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }} # If using a private repo or specific Codecov token
      #     files: ./coverage.xml # or a different coverage report format
      #     fail_ci_if_error: true
      #     verbose: true
      #   if: matrix.python-version == '3.10' # Often, coverage is uploaded from just one Python version run
